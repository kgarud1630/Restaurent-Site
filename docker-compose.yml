version: '3.8'

services:
  # Frontend Application
  restaurant-frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3001/api
    depends_on:
      - restaurant-api
    networks:
      - restaurant-network

  # Mock API Service (for development)
  restaurant-api:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ./mock-api:/app
    ports:
      - "3001:3001"
    command: sh -c "npm install && npm start"
    environment:
      - NODE_ENV=development
      - PORT=3001
    networks:
      - restaurant-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - restaurant-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=restaurant_db
      - POSTGRES_USER=restaurant_user
      - POSTGRES_PASSWORD=restaurant_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - restaurant-network

volumes:
  postgres_data:
  redis_data:

networks:
  restaurant-network:
    driver: bridge