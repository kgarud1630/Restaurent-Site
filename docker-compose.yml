version: '3.8'

services:
  # Frontend Application
  restaurant-frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://restaurant-api:3001/api
    depends_on:
      - restaurant-api
    networks:
      - restaurant-network
    restart: unless-stopped

  # Backend API Service
  restaurant-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - API_PORT=3001
      - DATABASE_URL=postgresql://restaurant_user:restaurant_pass@postgres:5432/restaurant_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_REFRESH_SECRET=your-refresh-secret-change-in-production
      - CORS_ORIGIN=http://localhost:3000
    depends_on:
      - postgres
      - redis
    networks:
      - restaurant-network
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - /app/node_modules

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=restaurant_db
      - POSTGRES_USER=restaurant_user
      - POSTGRES_PASSWORD=restaurant_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - restaurant-network
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - restaurant-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@restaurant.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - restaurant-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  restaurant-network:
    driver: bridge